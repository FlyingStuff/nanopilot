cmake_minimum_required(VERSION 2.6)

project(msgbus-build)
set(CMAKE_BUILD_TYPE Debug)


include_directories(lib)
include_directories(..) # for autogenerated type files


SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wall")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")

set(TYPE_COMPILER ${CMAKE_CURRENT_SOURCE_DIR}/type_compiler/type_compiler.py)

set(TYPE_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR}/types)
include_directories(${CMAKE_CURRENT_BINARY_DIR})

function(type_compile filename)
    get_filename_component(base ${filename} NAME_WE)
    set(base_abs ${TYPE_OUTPUT_DIR}/${base})
    file(MAKE_DIRECTORY ${TYPE_OUTPUT_DIR})
    set(output ${base_abs}.c ${base_abs}.h)
    add_custom_command(
        OUTPUT ${output}
        COMMAND python3 ${TYPE_COMPILER} ${filename} -o ${base_abs})
    set_source_files_properties(${output} PROPERTIES GENERATED TRUE)
endfunction()


type_compile(${CMAKE_CURRENT_SOURCE_DIR}/tests/types/test.type)

add_executable(
    tests
    ./msgbus.c
    ./serialization_msgpack.c
    ./type_print.c
    ./tests/atomicity.cpp
    ./tests/bus_test.cpp
    ./tests/cpp_wrapper_test.cpp
    ./tests/mocks/assert.cpp
    ./tests/mocks/synchronization.cpp
    ./tests/serialization_msgpack_test.cpp
    ./tests/signaling.cpp
    ./tests/subscriber_test.cpp
    ./tests/topic_test.cpp
    ./tests/type_print_test.cpp
    ${TYPE_OUTPUT_DIR}/test.c
    ./tests/runner.cpp
    lib/cmp_mem_access/cmp_mem_access.c
    lib/cmp/cmp.c
    )

target_include_directories(tests PUBLIC ./tests)

target_link_libraries(
    tests
    m
    CppUTest
    CppUTestExt
    )

# Run unit tests
add_custom_target(check ./tests -c DEPENDS tests)


type_compile(${CMAKE_CURRENT_SOURCE_DIR}/examples/posix/example_type.type)

add_executable(
    demo
    ./msgbus.c
    ./examples/posix/demo.c
    ./ports/posix/msgbus_port.c
    ${TYPE_OUTPUT_DIR}/example_type.c
    )

target_include_directories(demo PUBLIC ports/posix)

target_link_libraries(
    demo
    pthread
    )

